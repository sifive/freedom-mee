/* Copyright 2020 SiFive, Inc */
/* Copyright © 2020 Keith Packard */
/*
 * Licensed under the Apache License, Version 2.0 (the “License”); you
 * may not use this file except in compliance with the License. A copy
 * of this license can be found in the LICENSE.Apache2 file included
 * with this software. You may also obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an “AS IS” BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
/* SPDX-License-Identifier: Apache-2.0 */

#ifndef METAL__DRIVERS__SIFIVE_FE310_G000_HFROSC_CLOCK_H
#define METAL__DRIVERS__SIFIVE_FE310_G000_HFROSC_CLOCK_H

{% include 'template_comment.h.j2' %}

#include <metal/clock.h>

{% if 'sifive,fe310-g000,hfrosc' in devices %}
{% set sifive_fe310_g000_hfroscs = devices['sifive,fe310-g000,hfrosc'] %}

#define __METAL_DT_NUM_SIFIVE_FE310_G000_HFROSCS {{ sifive_fe310_g000_hfroscs|length }}

{% if sifive_fe310_g000_hfroscs|length > 1 %}

static const struct metal_clock ref_clocks[__METAL_DT_NUM_SIFIVE_FE310_G000_HFROSCS] = {
{% for clk in sifive_fe310_g000_hfroscs %}
	.ref = { {{ clk.clocks[0].id }} },
{% endfor %}
};

#define get_index(clock) ((clock).__clock_index)
#define REF_CLOCK(clock) ref_clocks[get_index(clock)]

{% else %}

#define get_index(clock) 0
#define REF_CLOCK(clock) ((struct metal_clock) { {{ sifive_fe310_g000_hfroscs[0].clocks[0].id }} })

{% endif %}

{% set driver_string = to_snakecase(sifive_fe310_g000_hfroscs[0].clocks[0].compatible[0]) %}
{% include 'clock_dispatch.h.j2' %}

{% endif %}

#endif
