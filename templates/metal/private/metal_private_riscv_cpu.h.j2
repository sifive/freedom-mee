/* Copyright 2020 SiFive, Inc */
/* Copyright © 2020 Keith Packard */
/*
 * Licensed under the Apache License, Version 2.0 (the “License”); you
 * may not use this file except in compliance with the License. A copy
 * of this license can be found in the LICENSE.Apache2 file included
 * with this software. You may also obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an “AS IS” BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
/* SPDX-License-Identifier: Apache-2.0 */

#ifndef METAL__GENERATED__RISCV_CPU_H
#define METAL__GENERATED__RISCV_CPU_H

{% include 'template_comment.h.j2' %}

#include <metal/cpu.h>
#include <metal/private/metal_private_cpu.h>
#include <metal/interrupt.h>
#include <stdint.h>
#include <stdbool.h>

static const struct dt_cpu_data {
    uint64_t timebase;
} dt_cpu_data[__METAL_DT_NUM_HARTS] = {
    {% for hart in harts %}
    {
    {% if hart.timebase_frequency is defined %}
        .timebase = {{ hart.timebase_frequency[0] }},
    {% else %}
        .timebase = 1000000, /* No timebase known, assume 1 MHz */
    {% endif %}
    },
    {% endfor %}
};

#endif
