/* Copyright 2020 SiFive, Inc */
/* Copyright © 2020 Keith Packard */
/*
 * Licensed under the Apache License, Version 2.0 (the “License”); you
 * may not use this file except in compliance with the License. A copy
 * of this license can be found in the LICENSE.Apache2 file included
 * with this software. You may also obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an “AS IS” BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */
#ifndef __METAL_DT_CACHE__H
#define __METAL_DT_CACHE__H

{% include 'template_comment.h.j2' %}

#include <stdbool.h>

{% if harts|length > 1 %}

#include <metal/private/metal_private_cpu.h>

static const bool dt_l1_icache[__METAL_DT_NUM_HARTS] = {
    {% for hart in harts %}
        {% if 'i_cache_size' in hart %}
    true,
        {% else %}
    false,
        {% endif %}
    {% endfor %}
};
static const bool dt_l1_dcache[__METAL_DT_NUM_HARTS] = {
    {% for hart in harts %}
        {% if 'd_cache_size' in hart %}
    true,
        {% else %}
    false,
        {% endif %}
    {% endfor %}
};

#define HART_HAS_L1_ICACHE(hartid) (dt_l1_icache[(hartid)])
#define HART_HAS_L1_DCACHE(hartid) (dt_l1_dcache[(hartid)])

{% else %}

{% if 'i_cache_size' in harts[0] %}
#define HART_HAS_L1_ICACHE(hartid) true
{% else %}
#define HART_HAS_L1_ICACHE(hartid) false
{% endif %}
{% if 'd_cache_size' in harts[0] %}
#define HART_HAS_L1_DCACHE(hartid) true
{% else %}
#define HART_HAS_L1_DCACHE(hartid) false
{% endif %}

{% endif %}

#endif /* ! __METAL_DT_CACHE__H */

